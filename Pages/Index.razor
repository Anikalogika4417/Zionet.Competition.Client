@page "/"
@inject HttpClient Http;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using System.IdentityModel.Tokens.Jwt
@inject IAccessTokenProvider TokenProvider

@attribute [Authorize(Roles = "admin")]
@* 
<PageTitle>Profile</PageTitle>

<h1>Hi, enter you data</h1>

<EditForm>
    <label>First Name</label>
    <InputText/>
</EditForm>

<SurveyPrompt Title="How is Blazor working for you?"/> *@

<h1>Start page</h1>

@code {
    // private Users[] users;

    @* async Task CallAPI()
    {
        var accessTokenResult = await TokenProvider.RequestAccessToken();
        var AccessToken = string.Empty;

        if(accessTokenResult.TryGetToken(out var token)){
            AccessToken = token.Value;
        }

        Console.WriteLine(AccessToken);
    } *@

    protected override async Task OnInitializedAsync()
    {

        var accessTokenResult = await TokenProvider.RequestAccessToken();
        var AccessToken = string.Empty;

        if (accessTokenResult.TryGetToken(out var token))
        {
            AccessToken = token.Value;
            System.Console.WriteLine("My token:");
            System.Console.WriteLine(AccessToken);

        }
        var handler = new JwtSecurityTokenHandler();
        var jwtSecurityToken = handler.ReadJwtToken(AccessToken);
        var Name = jwtSecurityToken.Claims.First(claim => claim.Type == "name").Value;
        var User_Id = jwtSecurityToken.Claims.First(claim => claim.Type == "id_user").Value;
        var Role = jwtSecurityToken.Claims.First(claim => claim.Type == "role").Value;
        var Email = jwtSecurityToken.Claims.First(claim => claim.Type == "mail").Value;
        Console.WriteLine(Name);
        Console.WriteLine(User_Id);
        Console.WriteLine(Role);
        Console.WriteLine(Email);
        
    }
} 