@page "/fetchdata"
@inject HttpClient Http
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Net.Http.Headers
@using System.Net
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using System.IdentityModel.Tokens.Jwt
@attribute [Authorize]
@inject IAccessTokenProvider TokenProvider

@* @inject IHttpClientFactory ClientFactory *@

@* @attribute [Authorize(Roles = "admin")] *@


<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (users == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Role</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in users.recordset)
        {
            <tr>
                <td>@user.user_name</td>
                <td>@user.user_email</td>
                <td>@user.user_role</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Responce users;

    protected override async Task OnInitializedAsync()
    {


        HttpResponseMessage response = await Http.GetAsync("http://localhost:5000/getUsers");
        users = await Http.GetFromJsonAsync<Responce>("http://localhost:5000/getUsers");
        Console.WriteLine("response");
        Console.WriteLine(users.recordset);
        foreach (var user in users.recordset)
        {
           Console.WriteLine(user.user_name); 
        }

        @* HttpResponseMessage ke = await Http.PostAsync("http://localhost:5000/addUser", Role); *@
        @* users = await Http.GetFromJsonAsync<Users[]>("https://dev-8th4j650wgitu0rp.us.auth0.com/api/v2/users"); *@
        @* Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", AccessToken); *@
        @* HttpResponseMessage response = await Http.GetAsync("https://dev-8th4j650wgitu0rp.us.auth0.com/api/v2/users");
        users = await Http.GetFromJsonAsync<Users[]>("https://dev-8th4j650wgitu0rp.us.auth0.com/api/v2/users"); *@
    }

    public class Responce
    {
        public User[]? recordset { get; set; }
    }

    public class User
    {
        public string create_date { get; set; }
        public int id { get; set; }
        public int id_status { get; set; }
        public string id_user { get; set; }
        public string update_date { get; set; }
        public string user_email { get; set; }
        public string user_phone { get; set; }
        public string user_role { get; set; }
        public string user_surname { get; set; }
        public string user_name { get; set; }
    }
} 